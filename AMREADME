********************************************
Testing locally the crab config
********************************************
- all scripts in crab/
- on data or mc: just change file path in PSet.py
- to copy a test file:
-- find path from DBS
xrdcp root://cmsxrootd.fnal.gov//store/mc/RunIIFall17NanoAOD/EWKZ2Jets_ZToLL_M-50_TuneCP5_13TeV-madgraph-pythia8/NANOAODSIM/PU2017_12Apr2018_94X_mc2017_realistic_v14-v1/20000/46AAFB79-3A43-E811-B359-0025905A60BE.root /eos/user/a/amagnan/EWKZ2Jets_ZToLL_12Apr2018_94X_nanoAOD_test.root

> python crab_script_vbf_data.py 1

- make sure any external file is given as a relative path compared to $CMSSW_BASE or compared to crab directory ?? --> to be tested for leptonSF files for example...


*******************************************
Instructions for making data pileup files
*******************************************
- see https://twiki.cern.ch/twiki/bin/view/CMS/PileupJSONFileforData
- need package  RecoLuminosity/LumiDB  to have  pileupCalc.py tool.
- inside data/pileup: copy Cert_lumi file, and pileup_latest.txt json files.
- MC has only integer values -> make data histogram with integer bins also, to have the average in each bin...

- central value:
> pileupCalc.py -i Cert_294927-306462_13TeV_EOY2017ReReco_Collisions17_JSON_v1.txt --inputLumiJSON pileup_latest.txt --calcMode true --minBiasXsec 69200 --maxPileupBin 80 --numPileupBins 80 --pileupHistName=pileup  RerecoData2017.root

- up and down variations:
> pileupCalc.py -i Cert_294927-306462_13TeV_EOY2017ReReco_Collisions17_JSON_v1.txt --inputLumiJSON pileup_latest.txt --calcMode true --minBiasXsec 72383 --maxPileupBin 80 --numPileupBins 80 --pileupHistName=pileup_plus  RerecoData2017_up.root
> pileupCalc.py -i Cert_294927-306462_13TeV_EOY2017ReReco_Collisions17_JSON_v1.txt --inputLumiJSON pileup_latest.txt --calcMode true --minBiasXsec 66017 --maxPileupBin 80 --numPileupBins 80 --pileupHistName=pileup_minus  RerecoData2017_down.root

> hadd RerecoData2017withSysts.root RerecoData2017.root RerecoData2017_up.root RerecoData2017_down.root
- update path to input files in: VBFHToInvModules.py

***************************************************
POG recipes and SF files for electrons and muons
***************************************************
- https://twiki.cern.ch/twiki/bin/viewauth/CMS/Egamma2017DataRecommendations
- https://twiki.cern.ch/twiki/bin/view/CMS/MuonReferenceEffs2017

*************************************************
Calculating the luminosity
*************************************************
https://cms-service-lumi.web.cern.ch/cms-service-lumi/brilwsdoc.html

- from a clean shell on lxplus:
-- check (or remove if old to be sure) no $HOME/.local/ brilws stuff there.
> export PATH=$HOME/.local/bin:/afs/cern.ch/cms/lumi/brilconda-1.1.7/bin:$PATH
> pip install --install-option="--prefix=$HOME/.local" brilws
> brilcalc lumi  --normtag /cvmfs/cms-bril.cern.ch/cms-lumi-pog/Normtags/normtag_PHYSICS.json -i Cert_294927-306462_13TeV_EOY2017ReReco_Collisions17_JSON_v1.txt

> replace Cert_XX by the output "processedLumis.json" of the data jobs from crab report. 


*************************************************
Basic selection criteria to apply
*************************************************
METfilters:
------------
Flag_goodVertices>0 && Flag_globalSuperTightHalo2016Filter>0 && Flag_HBHENoiseFilter>0 && Flag_HBHENoiseIsoFilter>0 && Flag_EcalDeadCellTriggerPrimitiveFilter>0 && Flag_BadPFMuonFilter>0 && Flag_BadChargedCandidateFilter>0 && Flag_ecalBadCalibFilter>0

Bjets to veto:
--------------
https://twiki.cern.ch/twiki/bin/viewauth/CMS/BtagRecommendation94X

Count Jets with : Jet_btagCSVV2 > 0.8838 (medium WP), pT>20 GeV, abseta<2.5.
[ Next version: use Jet_btagDeepB > 0.4941 (medium WP), rerunning with module btagSF2017deepCSV()]

In data: require nBjets == 0.
In MC: apply Weight = product{(1-Jet_btagSF[i])} i from 0 to nBjets.
Syst: Jet_btagSF_up, Jet_btagSF_down.

Taus to veto:
-------------
https://twiki.cern.ch/twiki/bin/viewauth/CMS/TauIDRecommendation13TeV
Using 2017V2 discriminators.
To do: compare using tauDiscri = Tau_idMVAoldDM2017v2 or tauDiscri = Tau_idMVAoldDMdR032017v2

tauDiscri bitmask 1 = VVLoose, 2 = VLoose, 4 = Loose, 8 = Medium, 16 = Tight, 32 = VTight, 64 = VVTight
Anti-electron MVA discriminator V6: bitmask 1 = VLoose, 2 = Loose, 4 = Medium, 8 = Tight, 16 = VTight
AntiMu V3 bitmask 1 = Loose, 2 = Tight

Count taus with : ((tauDiscri & 0x2)>>1)==1, pT > 18 GeV, abseta < 2.3 , Tau_idDecayMode>0.5, ((Tau_idAntiEle & 0x2)>>1)==1 , (Tau_idAntiMu & 0x1) == 1, fabs(Tau_dz)<0.2 

SF = 0.88 Â± 0.03.
Weight = (1-SF)^nTaus.

Apply overlap filter with vetoElectrons and vetoMuons (control regions...)

Photons to veto:
----------------
https://twiki.cern.ch/twiki/bin/viewauth/CMS/Egamma2017DataRecommendations

Count photons with pT>15 GeV, abseta<2.5, (Photon_cutBasedBitmap & 0x1)==1, Photon_electronVeto > 0.5
 